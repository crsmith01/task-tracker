{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAddTask","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","setShowAddTask","setTasks","console","log","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.879accba.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nconst Button = ({ color, text, onClick }) => {\n\n    return (\n        <button\n            onClick={onClick}\n            style={{ backgroundColor: color }}\n            className='btn'\n        >\n            {text}\n        </button>\n    )\n}\n\nButton.defaultProps = {\n    color: 'steelblue'\n}\n\nButton.propTypes = {\n    text: PropTypes.string,\n    color: PropTypes.string,\n    onClick: PropTypes.func.isRequired\n}\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from './Button';\n\n\nconst Header = ({title, onAdd, showAddTask}) => {\n    // const onClick = () => {\n    //     console.log('Click');\n    // }\n\n    return (\n        <header className='header'>\n            <h1>{title}</h1>\n            <Button \n            color={showAddTask ? 'red' : 'green'} \n            // text is dynamic - if true, close. if not, add\n            text={showAddTask ? 'Close' : 'Add'} \n            onClick={onAdd}/>\n        </header>\n    )\n}\n\nHeader.defaultProps = {\n    title: \"Task Tracker\"\n}\n\n\nHeader.propTypes = {\n    title: PropTypes.string.isRequired\n}\n\nexport default Header;","import React from 'react';\nimport { FaTimes } from 'react-icons/fa';\n\nconst Task = ({ task, onDelete, onToggle }) => {\n    return (\n        // task class with condition in template literal - if the task.reminder is true then class reminder (adding green left border). else there is no class on it\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} \n        // need the id so call a function and then pass in onToggle\n        // needs to be task.id not just id = since passing in task as a prop (line 4)\n        onDoubleClick={() => onToggle(task.id)}>\n            <h3>\n                {task.text}\n                <FaTimes\n                    style={{ color: 'red', cursor: 'pointer' }}\n                    onClick={() => onDelete(task.id)}\n                />\n            </h3>\n            <p>{task.day}</p>\n        </div>\n    )\n}\n\nexport default Task\n","import React from 'react';\nimport Task from './Task';\n\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\n\n    return (\n        <div>\n            {tasks.map((task) => (\n                <Task\n                    key={task.id}\n                    task={task}\n                    onDelete={onDelete}\n                    onToggle={onToggle} />\n            ))}\n        </div>\n    )\n}\n\nexport default Tasks;\n","import React from 'react';\nimport { useState } from 'react';\n\nconst AddTask = ({onAdd}) => {\n    const [text, setText] = useState('');\n    const [day, setDay] = useState('');\n    const [reminder, setReminder] = useState(false);\n\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        // if no text, alert for adding task text\n        if(!text) {\n            alert('Please add a task');\n            return;\n        }\n\n        // if it passes (aka there is text in the task box), call onAdd function\n        onAdd({text, day, reminder});\n\n        // clear the form\n        setText('');\n        setDay('');\n        setReminder(false);\n    }\n\n    return (\n        <form className='add-form' onSubmit={onSubmit}>\n            <div className='form-control'>\n                <label>Task</label>\n                <input\n                    type='text'\n                    placeholder='Add Task'\n                    value={text}\n                    onChange={(e) =>\n                        setText(e.target.value)} />\n            </div>\n            <div className='form-control'>\n                <label>Day and Time</label>\n                <input\n                    type='text'\n                    placeholder='Add Day and Time'\n                    value={day}\n                    onChange={(e) =>\n                        setDay(e.target.value)} />\n            </div>\n            <div className='form-control form-control-check'>\n                <label>Set reminder</label>\n                <input\n                    type='checkbox'\n                    checked={reminder}\n                    value={reminder}\n                    onChange={(e) =>\n                        setReminder(e.currentTarget.checked)} />\n            </div>\n\n            <input type='submit' value='Save Task' className='btn btn-block' />\n        </form>\n    )\n}\n\nexport default AddTask;","import './App.css';\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\n\nimport { useState } from 'react';\n\n\nfunction App() {\n  // boolean set to false by default\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([\n    {\n      id: 1,\n      text: 'Doctor appointment',\n      day: 'Feb 5th at 2:30pm',\n      reminder: true,\n    },\n    {\n      id: 2,\n      text: 'Meeting with coding classmates',\n      day: 'Feb 6th at 1:30pm',\n      reminder: true,\n    },\n    {\n      id: 3,\n      text: 'Grocery shopping',\n      day: 'Feb 5th at 12:30pm',\n      reminder: false,\n    }\n  ])\n\n  // Add Task\n  const addTask = (task) => {\n    console.log(task);\n    // give random number to id\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = { id, ...task };\n    // tasks that are there and adding the new task on\n    setTasks([...tasks, newTask])\n  }\n\n  // Delete Task\n  const deleteTask = (id) => {\n    console.log('delete', id);\n    // filter is a high order array method that takes in a function. \n    // Don't want to show task with id because we're deleting it\n    // setting tasks to the filtered tasks = immutable state (cannot change state itself)\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  // Toggle reminder\n  const toggleReminder = (id) => {\n    console.log(id);\n    // tasks is from state\n    // task id in current iteration is equal to task that is passed in, then we have specific object, else it will be no change\n    // spread operator \n    // set reminder to opposite of what it was (using ternary operator)\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: !task.reminder } : task))\n  }\n\n  return (\n    <div className=\"container\">\n      <Header\n        // toggle between the form and the list = by setting it to the opposite of what it is\n        onAdd={() => setShowAddTask(!showAddTask)} \n        showAddTask={showAddTask}/>\n      {/* && here is a basically a shorter way of using a ternary function but without the else - so if it's true do this, if not do nothing  */}\n      {showAddTask && <AddTask onAdd={addTask} />}\n      {tasks.length > 0 ? <Tasks\n        tasks={tasks}\n        onDelete={deleteTask}\n        onToggle={toggleReminder}\n      /> : 'There are currently no tasks to show.'}\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}